{"ast":null,"code":"var _jsxFileName = \"/home/andrew/mtg/client/src/components/cardDisplay.jsx\";\nimport React from 'react';\nimport { Modal } from \"./index\";\nimport Styled from \"../style/styled\";\nimport { ConfirmDelete } from \"./index\";\nexport default function CardDisplay(props) {\n  const dis = props.cardList;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Styled.CardDisplay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, Object.keys(dis).length > 0 && Object.values(dis).map((item, index) => {\n    let typeDescription, addButton, deleteButton;\n\n    if (props.isAuth) {\n      addButton = /*#__PURE__*/React.createElement(Styled.CardButton, {\n        onClick: e => props.addMyCard(item, e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 41\n        }\n      }, \"Add Card To Library\");\n    }\n\n    if (props.deleteCard) {\n      deleteButton = /*#__PURE__*/React.createElement(ConfirmDelete, {\n        delete: props.deleteCard,\n        theItem: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 44\n        }\n      }); //<Styled.CardButton onClick={()=>props.deleteCard(item)}>Delete Card From Library</Styled.CardButton>\n    }\n\n    if (item[\"name\"] === \"No Cards Found\") {\n      return /*#__PURE__*/React.createElement(Styled.Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Styled.CardHeader, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 41\n        }\n      }, item[\"name\"]));\n    } else if (item.imageUrl) {\n      if (item[\"types\"][0] === \"Creature\") {\n        typeDescription = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 53\n          }\n        }, \"Power \", item[\"power\"]), /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 115\n          }\n        }, \"Toughness \", item[\"toughness\"]));\n      } else if (item[\"types\"][0] === \"Planeswalker\") {\n        typeDescription = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 53\n          }\n        }, \"Loyalty \", item[\"loyalty\"]));\n      }\n\n      return /*#__PURE__*/React.createElement(Styled.Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Styled.CardHeader, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }\n      }, item[\"name\"]), /*#__PURE__*/React.createElement(Styled.CardInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(Styled.CardInfoText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }\n      }, \"CMC \", item[\"cmc\"]), typeDescription, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, item[\"type\"]))), /*#__PURE__*/React.createElement(Styled.CardDescription, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }\n      }, item[\"text\"]), addButton, deleteButton);\n    } else {\n      if (item[\"types\"][0] === \"Creature\") {\n        typeDescription = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 53\n          }\n        }, \"Power \", item[\"power\"]), /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 115\n          }\n        }, \"Toughness \", item[\"toughness\"]));\n      } else if (item[\"types\"][0] === \"Planeswalker\") {\n        typeDescription = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 53\n          }\n        }, \"Loyalty \", item[\"loyalty\"]));\n      }\n\n      return /*#__PURE__*/React.createElement(Styled.Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 36\n        }\n      }, /*#__PURE__*/React.createElement(Styled.CardHeader, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, item[\"name\"]), /*#__PURE__*/React.createElement(Styled.CardInfo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Styled.CardInfoText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }, \"CMC \", item[\"cmc\"]), typeDescription, /*#__PURE__*/React.createElement(Styled.CardHeader2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, item[\"type\"]))), /*#__PURE__*/React.createElement(Styled.CardDescription, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, item[\"text\"]), addButton, deleteButton);\n    }\n  })), Object.keys(dis).length === 0 && /*#__PURE__*/React.createElement(Styled.CardEmpty, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 42\n    }\n  }, props.view));\n}","map":{"version":3,"sources":["/home/andrew/mtg/client/src/components/cardDisplay.jsx"],"names":["React","Modal","Styled","ConfirmDelete","CardDisplay","props","dis","cardList","Object","keys","length","values","map","item","index","typeDescription","addButton","deleteButton","isAuth","e","addMyCard","deleteCard","imageUrl","view"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Modal} from \"./index\"\nimport Styled from \"../style/styled\"\nimport {ConfirmDelete} from \"./index\"\n\n\nexport default function CardDisplay(props) {\n    \n    const dis = props.cardList\n    \n    return (\n        <>\n        <Styled.CardDisplay>\n            {Object.keys(dis).length> 0 && Object.values(dis).map((item, index)=>{\n                        let typeDescription, addButton, deleteButton;\n\n                        if(props.isAuth){\n                            addButton = <Styled.CardButton onClick={(e)=>props.addMyCard(item,e)}>Add Card To Library</Styled.CardButton>\n                        }\n\n                        if(props.deleteCard){\n                            deleteButton = <ConfirmDelete delete={props.deleteCard} theItem={item}></ConfirmDelete>\n                            //<Styled.CardButton onClick={()=>props.deleteCard(item)}>Delete Card From Library</Styled.CardButton>\n                            \n                        }\n\n                        if(item[\"name\"]===\"No Cards Found\"){\n                            return <Styled.Card>\n                                        <Styled.CardHeader key={index}>{item[\"name\"]}</Styled.CardHeader>\n                                        \n                                    </Styled.Card>\n                        }\n                        else if(item.imageUrl){\n\n                            if(item[\"types\"][0]===\"Creature\"){\n\n                                typeDescription = <><Styled.CardHeader2>Power {item[\"power\"]}</Styled.CardHeader2><Styled.CardHeader2>Toughness {item[\"toughness\"]}</Styled.CardHeader2></>\n                                \n                            }else if (item[\"types\"][0]===\"Planeswalker\"){\n\n                                typeDescription = <><Styled.CardHeader2>Loyalty {item[\"loyalty\"]}</Styled.CardHeader2></>\n\n                            }\n\n                            return <Styled.Card>\n                                    <Styled.CardHeader key={index}>{item[\"name\"]}</Styled.CardHeader>\n                                    <Styled.CardInfo>\n                                    <Modal item={item}/>\n                                    <Styled.CardInfoText>\n                                    <Styled.CardHeader2>CMC {item[\"cmc\"]}</Styled.CardHeader2>\n                                    {typeDescription}\n                                    <Styled.CardHeader2>{item[\"type\"]}</Styled.CardHeader2>\n                                    </Styled.CardInfoText>\n                                    </Styled.CardInfo>\n                                    <Styled.CardDescription>{item[\"text\"]}</Styled.CardDescription>\n                                    {addButton}\n                                    {deleteButton}\n                                    </Styled.Card>\n                        }else{\n\n                            if(item[\"types\"][0]===\"Creature\"){\n\n                                typeDescription = <><Styled.CardHeader2>Power {item[\"power\"]}</Styled.CardHeader2><Styled.CardHeader2>Toughness {item[\"toughness\"]}</Styled.CardHeader2></>\n\n                            }else if (item[\"types\"][0]===\"Planeswalker\"){\n\n                                typeDescription = <><Styled.CardHeader2>Loyalty {item[\"loyalty\"]}</Styled.CardHeader2></>\n\n                            }\n                            return <Styled.Card>\n\n                            <Styled.CardHeader key={index}>{item[\"name\"]}</Styled.CardHeader>\n                            <Styled.CardInfo>\n                            <Modal item={item}/>\n                            <Styled.CardInfoText>\n                            <Styled.CardHeader2>CMC {item[\"cmc\"]}</Styled.CardHeader2>\n                            {typeDescription}\n                            <Styled.CardHeader2>{item[\"type\"]}</Styled.CardHeader2>\n                            </Styled.CardInfoText>\n                            </Styled.CardInfo>\n                            <Styled.CardDescription>{item[\"text\"]}</Styled.CardDescription>\n                            {addButton}\n                            {deleteButton}\n                            </Styled.Card>\n                        }\n                    }\n        \n            )}\n        </Styled.CardDisplay>\n        {Object.keys(dis).length=== 0 && <Styled.CardEmpty>{props.view}</Styled.CardEmpty>}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}