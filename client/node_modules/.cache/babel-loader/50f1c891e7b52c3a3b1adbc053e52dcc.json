{"ast":null,"code":"export var loadState=function loadState(){try{var serializedState=localStorage.getItem(\"state\");if(serializedState===null){return{isLoaded:true,error:false,auth:false,cardList:[],currentDeck:{name:\"Please Select A Deck\",decklist:[]},myDecks:[],myCards:[],decklists:[]};}//return the saved state\nreturn JSON.parse(serializedState);}catch(err){return undefined;}};export var saveState=function saveState(state){try{//set state to string\nvar serializedState=JSON.stringify(state);//set local storage to stringified state\nlocalStorage.setItem(\"state\",serializedState);}catch(err){console.log(err);}};","map":{"version":3,"sources":["/home/andrew/mtg/client/src/store/localStorage.js"],"names":["loadState","serializedState","localStorage","getItem","isLoaded","error","auth","cardList","currentDeck","name","decklist","myDecks","myCards","decklists","JSON","parse","err","undefined","saveState","state","stringify","setItem","console","log"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,SAAS,CAAE,QAAXA,CAAAA,SAAW,EAAI,CACxB,GAAG,CACC,GAAMC,CAAAA,eAAe,CAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB,CACA,GAAGF,eAAe,GAAG,IAArB,CAA0B,CACtB,MAAO,CAACG,QAAQ,CAAC,IAAV,CACHC,KAAK,CAAC,KADH,CAEHC,IAAI,CAAC,KAFF,CAGHC,QAAQ,CAAC,EAHN,CAIHC,WAAW,CAAC,CAACC,IAAI,CAAC,sBAAN,CAA8BC,QAAQ,CAAC,EAAvC,CAJT,CAKHC,OAAO,CAAC,EALL,CAMHC,OAAO,CAAC,EANL,CAOHC,SAAS,CAAC,EAPP,CAAP,CAQH,CACD;AACA,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWd,eAAX,CAAP,CACH,OAAMe,GAAN,CAAU,CACP,MAAOC,CAAAA,SAAP,CACH,CACJ,CAlBM,CAmBP,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAU,CAC/B,GAAG,CACC;AACA,GAAMlB,CAAAA,eAAe,CAAGa,IAAI,CAACM,SAAL,CAAeD,KAAf,CAAxB,CACA;AACAjB,YAAY,CAACmB,OAAb,CAAqB,OAArB,CAA8BpB,eAA9B,EACH,OAAMe,GAAN,CAAU,CACPM,OAAO,CAACC,GAAR,CAAYP,GAAZ,EACH,CACJ,CATM","sourcesContent":["export const loadState =()=>{\n    try{\n        const serializedState = localStorage.getItem(\"state\");\n        if(serializedState===null){\n            return {isLoaded:true,\n                error:false,\n                auth:false, \n                cardList:[], \n                currentDeck:{name:\"Please Select A Deck\", decklist:[]}, \n                myDecks:[], \n                myCards:[], \n                decklists:[]}\n        }\n        //return the saved state\n        return JSON.parse(serializedState);\n    }catch(err){\n        return undefined\n    }\n}\nexport const saveState = (state) =>{\n    try{\n        //set state to string\n        const serializedState = JSON.stringify(state);\n        //set local storage to stringified state\n        localStorage.setItem(\"state\", serializedState);\n    }catch(err){\n        console.log(err);\n    }\n}"]},"metadata":{},"sourceType":"module"}