{"ast":null,"code":"import _classCallCheck from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _possibleConstructorReturn from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import Styled from\"../style/styled\";var CheckBox=/*#__PURE__*/function(_Component){_inherits(CheckBox,_Component);var _super=_createSuper(CheckBox);function CheckBox(props){var _this;_classCallCheck(this,CheckBox);_this=_super.call(this,props);_this.handleChange=function(){_this.setState({checked:!_this.state.checked});_this.props.select(_this.props.color);};_this.state={checked:false};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));return _this;}_createClass(CheckBox,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Styled.CheckboxContainer,null,/*#__PURE__*/React.createElement(Styled.CheckBoxLabel,null,this.props.color),/*#__PURE__*/React.createElement(Styled.StyledCheckbox,{checked:this.state.checked,color:this.props.color,onClick:this.handleChange},/*#__PURE__*/React.createElement(Styled.Icon,{checked:this.state.checked,viewBox:\"0 0 24 24\"},/*#__PURE__*/React.createElement(\"polyline\",{points:\"20 6 9 17 4 12\"}))));}}]);return CheckBox;}(Component);export{CheckBox as default};","map":{"version":3,"sources":["/home/andrew/mtg/client/src/components/checkBox.jsx"],"names":["React","Component","Styled","CheckBox","props","handleChange","setState","checked","state","select","color","bind"],"mappings":"k9CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,GAEqBC,CAAAA,Q,oGACjB,kBAAYC,KAAZ,CAAkB,0CACd,uBAAMA,KAAN,EADc,MAOlBC,YAPkB,CAOH,UAAK,CAEhB,MAAKC,QAAL,CAAc,CAACC,OAAO,CAAC,CAAC,MAAKC,KAAL,CAAWD,OAArB,CAAd,EACA,MAAKH,KAAL,CAAWK,MAAX,CAAkB,MAAKL,KAAL,CAAWM,KAA7B,EACH,CAXiB,CAEd,MAAKF,KAAL,CAAW,CAACD,OAAO,CAAC,KAAT,CAAX,CAEA,MAAKF,YAAL,CAAkB,MAAKA,YAAL,CAAkBM,IAAlB,+BAAlB,CAJc,aAKjB,C,4DAQQ,CAEL,mBACI,oBAAC,MAAD,CAAQ,iBAAR,mBACI,oBAAC,MAAD,CAAQ,aAAR,MAAuB,KAAKP,KAAL,CAAWM,KAAlC,CADJ,cAEI,oBAAC,MAAD,CAAQ,cAAR,EAAuB,OAAO,CAAE,KAAKF,KAAL,CAAWD,OAA3C,CAAoD,KAAK,CAAE,KAAKH,KAAL,CAAWM,KAAtE,CAA6E,OAAO,CAAE,KAAKL,YAA3F,eACI,oBAAC,MAAD,CAAQ,IAAR,EAAa,OAAO,CAAE,KAAKG,KAAL,CAAWD,OAAjC,CAA0C,OAAO,CAAC,WAAlD,eACI,gCAAU,MAAM,CAAC,gBAAjB,EADJ,CADJ,CAFJ,CADJ,CAWH,C,sBA3BiCN,S,SAAjBE,Q","sourcesContent":["import React, { Component } from 'react'\nimport Styled from \"../style/styled\"\n\nexport default class CheckBox extends Component {\n    constructor(props){\n        super(props)\n        this.state={checked:false}\n        \n        this.handleChange=this.handleChange.bind(this)\n    }\n\n    handleChange = () =>{\n        \n        this.setState({checked:!this.state.checked})\n        this.props.select(this.props.color)\n    }\n\n    render() {\n        \n        return (\n            <Styled.CheckboxContainer>\n                <Styled.CheckBoxLabel>{this.props.color}</Styled.CheckBoxLabel>\n                <Styled.StyledCheckbox checked={this.state.checked} color={this.props.color} onClick={this.handleChange}>\n                    <Styled.Icon checked={this.state.checked} viewBox=\"0 0 24 24\">\n                        <polyline points=\"20 6 9 17 4 12\" />\n                    </Styled.Icon>\n                </Styled.StyledCheckbox>\n                \n            </Styled.CheckboxContainer>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}