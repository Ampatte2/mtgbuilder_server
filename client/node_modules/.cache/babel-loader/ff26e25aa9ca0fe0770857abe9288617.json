{"ast":null,"code":"import _classCallCheck from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import{connect}from\"react-redux\";import{saveDeck}from\"../store/actions\";import{Link}from'react-router-dom';import Styled from\"../style/styled\";var Decklists=/*#__PURE__*/function(_Component){_inherits(Decklists,_Component);var _super=_createSuper(Decklists);function Decklists(){_classCallCheck(this,Decklists);return _super.apply(this,arguments);}_createClass(Decklists,[{key:\"render\",value:function render(){var dis=this.props.decklists;return/*#__PURE__*/React.createElement(Styled.DeckDisplay,null,dis.length>0&&dis.map(function(item,index){return/*#__PURE__*/React.createElement(Styled.Deck,null,/*#__PURE__*/React.createElement(Styled.DeckHeader,{key:index},item.name),/*#__PURE__*/React.createElement(Link,{to:\"/viewDeck/\"+index+\"/decklists\"},/*#__PURE__*/React.createElement(Styled.DeckImage,{src:item.decklist[0].imageUrl})));}));}}]);return Decklists;}(Component);var mapStateToProps=function mapStateToProps(state){var auth=state.auth;var decklists=state.decklists;return{auth:auth,decklists:decklists};};export default connect(mapStateToProps,{saveDeck:saveDeck})(Decklists);","map":{"version":3,"sources":["/home/andrew/mtg/client/src/pages/decklists.jsx"],"names":["React","Component","connect","saveDeck","Link","Styled","Decklists","dis","props","decklists","length","map","item","index","name","decklist","imageUrl","mapStateToProps","state","auth"],"mappings":"ozCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,GAIMC,CAAAA,S,6PAGO,CACL,GAAIC,CAAAA,GAAG,CAAG,KAAKC,KAAL,CAAWC,SAArB,CAEA,mBACI,oBAAC,MAAD,CAAQ,WAAR,MACKF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAgBH,GAAG,CAACI,GAAJ,CAAQ,SAACC,IAAD,CAAOC,KAAP,CAAe,CACpC,mBAAO,oBAAC,MAAD,CAAQ,IAAR,mBACP,oBAAC,MAAD,CAAQ,UAAR,EAAmB,GAAG,CAAEA,KAAxB,EAAgCD,IAAI,CAACE,IAArC,CADO,cAEP,oBAAC,IAAD,EAAM,EAAE,CAAE,aAAeD,KAAf,CAAuB,YAAjC,eAA+C,oBAAC,MAAD,CAAQ,SAAR,EAAkB,GAAG,CAAED,IAAI,CAACG,QAAL,CAAc,CAAd,EAAiBC,QAAxC,EAA/C,CAFO,CAAP,CAKH,CANgB,CADrB,CADJ,CAWH,C,uBAjBmBf,S,EAoBxB,GAAMgB,CAAAA,eAAe,CAAE,QAAjBA,CAAAA,eAAiB,CAACC,KAAD,CAAS,IACrBC,CAAAA,IADqB,CACbD,KADa,CACrBC,IADqB,IAErBV,CAAAA,SAFqB,CAERS,KAFQ,CAErBT,SAFqB,CAG5B,MAAO,CAACU,IAAI,CAAJA,IAAD,CAAOV,SAAS,CAATA,SAAP,CAAP,CACH,CAJD,CAMA,cAAeP,CAAAA,OAAO,CAACe,eAAD,CAAkB,CAACd,QAAQ,CAARA,QAAD,CAAlB,CAAP,CAAqCG,SAArC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport {saveDeck} from \"../store/actions\";\nimport { Link } from 'react-router-dom';\nimport Styled from \"../style/styled\"\n\n\n\nclass Decklists extends Component {\n    \n\n    render() {\n        let dis = this.props.decklists\n\n        return (\n            <Styled.DeckDisplay>\n                {dis.length>0 && dis.map((item, index)=>{                    \n                    return <Styled.Deck>\n                    <Styled.DeckHeader key={index}>{item.name}</Styled.DeckHeader>\n                    <Link to={\"/viewDeck/\" + index + \"/decklists\"}><Styled.DeckImage src={item.decklist[0].imageUrl}></Styled.DeckImage></Link>\n                    \n                    </Styled.Deck>\n                })}\n            </Styled.DeckDisplay>\n        )\n    }\n}\n\nconst mapStateToProps= (state)=>{\n    const {auth} = state;\n    const {decklists} = state;\n    return {auth, decklists}\n}\n\nexport default connect(mapStateToProps, {saveDeck})(Decklists);\n"]},"metadata":{},"sourceType":"module"}