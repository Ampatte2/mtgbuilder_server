{"ast":null,"code":"import _toConsumableArray from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _possibleConstructorReturn from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import{getCard as _getCard,saveMyCard as _saveMyCard}from\"../store/actions\";import{connect}from\"react-redux\";import React,{Component}from'react';import Loader from\"react-loader\";import{Decklist,CardDisplay,CheckBox}from\"../components\";import Styled from\"../style/styled\";var home=/*#__PURE__*/function(_Component){_inherits(home,_Component);var _super=_createSuper(home);function home(props){var _this;_classCallCheck(this,home);_this=_super.call(this,props);_this.handleSubmit=function(e){e.preventDefault();_this.props.getCard(_this.state);};_this.addMyCard=function(card,e){//hides button of AddCard To Library if clicked.\ne.target.style.visibility=\"hidden\";var filteredItem={imageUrl:card.imageUrl,name:card.name,cmc:card.cmc,types:card.types,type:card.type,text:card.text,loyalty:card.loyalty,toughness:card.toughness,power:card.power,quantity:1};_this.props.saveMyCard(filteredItem);};_this.state={name:\"\",cmc:\"\",set:\"\",colors:[],type:\"\",text:\"\"};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.handleChangeSelect=_this.handleChangeSelect.bind(_assertThisInitialized(_this));return _this;}_createClass(home,[{key:\"handleChange\",value:function handleChange(event){var newState={};newState[event.target.name]=event.target.value;this.setState(newState);}},{key:\"handleChangeSelect\",value:function handleChangeSelect(color){console.log(this.state.colors);if(this.state.colors.includes(color)){var index=this.state.colors.indexOf(color);var newState=this.state.colors;newState.splice(index,1);this.setState({colors:newState});}else{this.setState({colors:[].concat(_toConsumableArray(this.state.colors),[color])});}}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Styled.SearchForm,{name:\"search-form\",onSubmit:function onSubmit(e){return _this2.handleSubmit(e);}},/*#__PURE__*/React.createElement(Styled.SearchFormLabel,{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(Styled.SearchFormInput,{name:\"name\",type:\"text\",onChange:function onChange(e){return _this2.handleChange(e);}}),/*#__PURE__*/React.createElement(Styled.SearchFormLabel,{htmlFor:\"cmc\"},\"CMC\"),/*#__PURE__*/React.createElement(Styled.SearchFormInput,{name:\"cmc\",type:\"text\",onChange:function onChange(e){return _this2.handleChange(e);}}),/*#__PURE__*/React.createElement(Styled.SearchFormLabel,{htmlFor:\"set\"},\"Set\"),/*#__PURE__*/React.createElement(Styled.SearchFormInput,{name:\"set\",type:\"text\",onChange:function onChange(e){return _this2.handleChange(e);}}),/*#__PURE__*/React.createElement(Styled.SearchFormInputCheckboxDiv,null,/*#__PURE__*/React.createElement(CheckBox,{color:\"red\",select:this.handleChangeSelect}),/*#__PURE__*/React.createElement(CheckBox,{color:\"blue\",select:this.handleChangeSelect}),/*#__PURE__*/React.createElement(CheckBox,{color:\"green\",select:this.handleChangeSelect}),/*#__PURE__*/React.createElement(CheckBox,{color:\"black\",select:this.handleChangeSelect}),/*#__PURE__*/React.createElement(CheckBox,{color:\"white\",select:this.handleChangeSelect})),/*#__PURE__*/React.createElement(Styled.SearchFormLabel,{htmlFor:\"type\"},\"Type\"),/*#__PURE__*/React.createElement(Styled.SearchFormInput,{name:\"type\",type:\"text\",onChange:function onChange(e){return _this2.handleChange(e);}}),/*#__PURE__*/React.createElement(Styled.SearchFormLabel,{htmlFor:\"text\"},\"Text\"),/*#__PURE__*/React.createElement(Styled.SearchFormInput,{name:\"text\",type:\"text\",onChange:function onChange(e){return _this2.handleChange(e);}}),/*#__PURE__*/React.createElement(Styled.SearchFormButton,{value:\"submit\",type:\"submit\"},\"Get the card\")),/*#__PURE__*/React.createElement(Loader,{loaded:this.props.isLoaded}),/*#__PURE__*/React.createElement(CardDisplay,{cardList:this.props.cardList,addMyCard:this.addMyCard,view:\"Search For a Card\",isAuth:this.props.auth}));}}]);return home;}(Component);var mapStateToProps=function mapStateToProps(state){var isLoaded=state.isLoaded;var cardList=state.cardList;var auth=state.auth;return{isLoaded:isLoaded,cardList:cardList,auth:auth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getCard:function getCard(item){dispatch(_getCard(item));},saveMyCard:function saveMyCard(item){dispatch(_saveMyCard(item));}};};export default connect(mapStateToProps,mapDispatchToProps)(home);","map":{"version":3,"sources":["/home/andrew/mtg/client/src/pages/home.jsx"],"names":["getCard","saveMyCard","connect","React","Component","Loader","Decklist","CardDisplay","CheckBox","Styled","home","props","handleSubmit","e","preventDefault","state","addMyCard","card","target","style","visibility","filteredItem","imageUrl","name","cmc","types","type","text","loyalty","toughness","power","quantity","set","colors","handleChange","bind","handleChangeSelect","event","newState","value","setState","color","console","log","includes","index","indexOf","splice","isLoaded","cardList","auth","mapStateToProps","mapDispatchToProps","dispatch","item"],"mappings":"wmDAEA,OAAQA,OAAO,GAAPA,CAAAA,QAAR,CAAiBC,UAAU,GAAVA,CAAAA,WAAjB,KAAkC,kBAAlC,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAAQC,QAAR,CAAkBC,WAAlB,CAA+BC,QAA/B,KAA8C,eAA9C,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,GAIMC,CAAAA,I,4FACF,cAAYC,KAAZ,CAAkB,sCACd,uBAAMA,KAAN,EADc,MA+BlBC,YA/BkB,CA+BJ,SAACC,CAAD,CAAM,CAChBA,CAAC,CAACC,cAAF,GAEA,MAAKH,KAAL,CAAWX,OAAX,CAAmB,MAAKe,KAAxB,EACH,CAnCiB,OAqClBC,SArCkB,CAqCN,SAACC,IAAD,CAAOJ,CAAP,CAAY,CACpB;AACAA,CAAC,CAACK,MAAF,CAASC,KAAT,CAAeC,UAAf,CAA4B,QAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAEL,IAAI,CAACK,QADE,CAEjBC,IAAI,CAAEN,IAAI,CAACM,IAFM,CAGjBC,GAAG,CAAEP,IAAI,CAACO,GAHO,CAIjBC,KAAK,CAAER,IAAI,CAACQ,KAJK,CAKjBC,IAAI,CAACT,IAAI,CAACS,IALO,CAMjBC,IAAI,CAACV,IAAI,CAACU,IANO,CAOjBC,OAAO,CAACX,IAAI,CAACW,OAPI,CAQjBC,SAAS,CAACZ,IAAI,CAACY,SARE,CASjBC,KAAK,CAACb,IAAI,CAACa,KATM,CAUjBC,QAAQ,CAAC,CAVQ,CAArB,CAYA,MAAKpB,KAAL,CAAWV,UAAX,CAAsBoB,YAAtB,EACH,CAtDiB,CAEd,MAAKN,KAAL,CAAa,CAACQ,IAAI,CAAC,EAAN,CAAUC,GAAG,CAAC,EAAd,CAAkBQ,GAAG,CAAC,EAAtB,CAA0BC,MAAM,CAAC,EAAjC,CAAqCP,IAAI,CAAC,EAA1C,CAA8CC,IAAI,CAAC,EAAnD,CAAb,CACA,MAAKO,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CACA,MAAKvB,YAAL,CAAoB,MAAKA,YAAL,CAAkBuB,IAAlB,+BAApB,CACA,MAAKC,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBD,IAAxB,+BAA1B,CALc,aAMjB,C,mEAEYE,K,CAAM,CACf,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACAA,QAAQ,CAACD,KAAK,CAACnB,MAAN,CAAaK,IAAd,CAAR,CAA4Bc,KAAK,CAACnB,MAAN,CAAaqB,KAAzC,CACA,KAAKC,QAAL,CAAcF,QAAd,EAEH,C,8DACkBG,K,CAAM,CAGrBC,OAAO,CAACC,GAAR,CAAY,KAAK5B,KAAL,CAAWkB,MAAvB,EACA,GAAG,KAAKlB,KAAL,CAAWkB,MAAX,CAAkBW,QAAlB,CAA2BH,KAA3B,CAAH,CAAqC,CACjC,GAAII,CAAAA,KAAK,CAAG,KAAK9B,KAAL,CAAWkB,MAAX,CAAkBa,OAAlB,CAA0BL,KAA1B,CAAZ,CACA,GAAIH,CAAAA,QAAQ,CAAG,KAAKvB,KAAL,CAAWkB,MAA1B,CACAK,QAAQ,CAACS,MAAT,CAAgBF,KAAhB,CAAsB,CAAtB,EACA,KAAKL,QAAL,CAAc,CAACP,MAAM,CAAEK,QAAT,CAAd,EACH,CALD,IAKK,CACD,KAAKE,QAAL,CAAc,CAACP,MAAM,8BAAK,KAAKlB,KAAL,CAAWkB,MAAhB,GAAwBQ,KAAxB,EAAP,CAAd,EAEH,CAGJ,C,uCA4BQ,iBAEL,mBACA,4CACI,oBAAC,MAAD,CAAQ,UAAR,EAAmB,IAAI,CAAC,aAAxB,CAAuC,QAAQ,CAAE,kBAAA5B,CAAC,QAAE,CAAA,MAAI,CAACD,YAAL,CAAkBC,CAAlB,CAAF,EAAlD,eACI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,OAAO,CAAC,MAAhC,SADJ,cAEI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,IAAI,CAAC,MAA7B,CAAoC,IAAI,CAAC,MAAzC,CAAgD,QAAQ,CAAE,kBAAAA,CAAC,QAAE,CAAA,MAAI,CAACqB,YAAL,CAAkBrB,CAAlB,CAAF,EAA3D,EAFJ,cAGI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,OAAO,CAAC,KAAhC,QAHJ,cAII,oBAAC,MAAD,CAAQ,eAAR,EAAwB,IAAI,CAAC,KAA7B,CAAmC,IAAI,CAAC,MAAxC,CAA+C,QAAQ,CAAE,kBAAAA,CAAC,QAAE,CAAA,MAAI,CAACqB,YAAL,CAAkBrB,CAAlB,CAAF,EAA1D,EAJJ,cAKI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,OAAO,CAAC,KAAhC,QALJ,cAMI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,IAAI,CAAC,KAA7B,CAAmC,IAAI,CAAC,MAAxC,CAA+C,QAAQ,CAAE,kBAAAA,CAAC,QAAE,CAAA,MAAI,CAACqB,YAAL,CAAkBrB,CAAlB,CAAF,EAA1D,EANJ,cAQI,oBAAC,MAAD,CAAQ,0BAAR,mBACA,oBAAC,QAAD,EAAU,KAAK,CAAE,KAAjB,CAAwB,MAAM,CAAE,KAAKuB,kBAArC,EADA,cAEA,oBAAC,QAAD,EAAU,KAAK,CAAE,MAAjB,CAAyB,MAAM,CAAE,KAAKA,kBAAtC,EAFA,cAGA,oBAAC,QAAD,EAAU,KAAK,CAAE,OAAjB,CAA0B,MAAM,CAAE,KAAKA,kBAAvC,EAHA,cAIA,oBAAC,QAAD,EAAU,KAAK,CAAE,OAAjB,CAA0B,MAAM,CAAE,KAAKA,kBAAvC,EAJA,cAKA,oBAAC,QAAD,EAAU,KAAK,CAAE,OAAjB,CAA0B,MAAM,CAAE,KAAKA,kBAAvC,EALA,CARJ,cAgBI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,OAAO,CAAC,MAAhC,SAhBJ,cAiBI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,IAAI,CAAC,MAA7B,CAAoC,IAAI,CAAC,MAAzC,CAAgD,QAAQ,CAAE,kBAAAvB,CAAC,QAAE,CAAA,MAAI,CAACqB,YAAL,CAAkBrB,CAAlB,CAAF,EAA3D,EAjBJ,cAkBI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,OAAO,CAAC,MAAhC,SAlBJ,cAmBI,oBAAC,MAAD,CAAQ,eAAR,EAAwB,IAAI,CAAC,MAA7B,CAAoC,IAAI,CAAC,MAAzC,CAAgD,QAAQ,CAAE,kBAAAA,CAAC,QAAE,CAAA,MAAI,CAACqB,YAAL,CAAkBrB,CAAlB,CAAF,EAA3D,EAnBJ,cAoBI,oBAAC,MAAD,CAAQ,gBAAR,EAAyB,KAAK,CAAC,QAA/B,CAAwC,IAAI,CAAC,QAA7C,iBApBJ,CADJ,cAwBI,oBAAC,MAAD,EAAQ,MAAM,CAAE,KAAKF,KAAL,CAAWqC,QAA3B,EAxBJ,cA4BI,oBAAC,WAAD,EAAa,QAAQ,CAAE,KAAKrC,KAAL,CAAWsC,QAAlC,CAA4C,SAAS,CAAE,KAAKjC,SAA5D,CAAuE,IAAI,CAAE,mBAA7E,CAAkG,MAAM,CAAE,KAAKL,KAAL,CAAWuC,IAArH,EA5BJ,CADA,CAkCH,C,kBA9Fc9C,S,EAiGnB,GAAM+C,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACpC,KAAD,CAAU,IACvBiC,CAAAA,QADuB,CACXjC,KADW,CACvBiC,QADuB,IAEvBC,CAAAA,QAFuB,CAEXlC,KAFW,CAEvBkC,QAFuB,IAGvBC,CAAAA,IAHuB,CAGfnC,KAHe,CAGvBmC,IAHuB,CAI9B,MAAO,CAACF,QAAQ,CAARA,QAAD,CAAWC,QAAQ,CAARA,QAAX,CAAqBC,IAAI,CAAJA,IAArB,CAAP,CAEH,CAND,CAOA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAY,CACnC,MAAM,CACFrD,OAAO,CAAE,iBAACsD,IAAD,CAAQ,CAACD,QAAQ,CAACrD,QAAO,CAACsD,IAAD,CAAR,CAAR,CAAwB,CADxC,CAEFrD,UAAU,CAAE,oBAACqD,IAAD,CAAQ,CAACD,QAAQ,CAACpD,WAAU,CAACqD,IAAD,CAAX,CAAR,CAA2B,CAF9C,CAAN,CAIH,CALD,CAOA,cAAepD,CAAAA,OAAO,CAACiD,eAAD,CAAkBC,kBAAlB,CAAP,CAA6C1C,IAA7C,CAAf","sourcesContent":["\n\nimport {getCard, saveMyCard} from \"../store/actions\";\nimport {connect} from \"react-redux\";\nimport React, { Component } from 'react'\nimport Loader from \"react-loader\";\nimport {Decklist, CardDisplay, CheckBox} from \"../components\";\nimport Styled from \"../style/styled\";\n\n\n\nclass home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {name:\"\", cmc:\"\", set:\"\", colors:[], type:\"\", text:\"\"};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChangeSelect = this.handleChangeSelect.bind(this)\n    }\n\n    handleChange(event){\n        let newState = {};\n        newState[event.target.name]=event.target.value;\n        this.setState(newState);\n        \n    }\n    handleChangeSelect(color){\n        \n        \n        console.log(this.state.colors)\n        if(this.state.colors.includes(color)){\n            let index = this.state.colors.indexOf(color)\n            let newState = this.state.colors;\n            newState.splice(index,1);\n            this.setState({colors: newState})\n        }else{\n            this.setState({colors:[...this.state.colors, color]})\n            \n        }\n        \n        \n    }\n\n    handleSubmit= (e) =>{\n        e.preventDefault();\n        \n        this.props.getCard(this.state)\n    }\n\n    addMyCard = (card, e) =>{\n        //hides button of AddCard To Library if clicked.\n        e.target.style.visibility = \"hidden\"\n\n        const filteredItem = {\n            imageUrl: card.imageUrl,\n            name: card.name,\n            cmc: card.cmc,\n            types: card.types,\n            type:card.type,\n            text:card.text,\n            loyalty:card.loyalty,\n            toughness:card.toughness,\n            power:card.power,\n            quantity:1\n        }\n        this.props.saveMyCard(filteredItem)\n    }\n    \n    \n    render() {\n        \n        return (\n        <div>\n            <Styled.SearchForm name=\"search-form\"  onSubmit={e=>this.handleSubmit(e)}>\n                <Styled.SearchFormLabel htmlFor=\"name\">Name</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"name\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormLabel htmlFor=\"cmc\" >CMC</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"cmc\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormLabel htmlFor=\"set\">Set</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"set\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                \n                <Styled.SearchFormInputCheckboxDiv>\n                <CheckBox color={\"red\"} select={this.handleChangeSelect}></CheckBox>                \n                <CheckBox color={\"blue\"} select={this.handleChangeSelect}></CheckBox>\n                <CheckBox color={\"green\"} select={this.handleChangeSelect}></CheckBox>\n                <CheckBox color={\"black\"} select={this.handleChangeSelect}></CheckBox>\n                <CheckBox color={\"white\"} select={this.handleChangeSelect}></CheckBox>\n                </Styled.SearchFormInputCheckboxDiv>\n                \n                <Styled.SearchFormLabel htmlFor=\"type\">Type</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"type\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormLabel htmlFor=\"text\">Text</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"text\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormButton value=\"submit\" type=\"submit\">Get the card</Styled.SearchFormButton>\n            </Styled.SearchForm>\n\n            <Loader loaded={this.props.isLoaded}/>\n            {/* Look at props cardlist being passed down, if empty show alternate text \n                if not empty print only cards that have an image and are the original printing of the card\n            */}\n            <CardDisplay cardList={this.props.cardList} addMyCard={this.addMyCard} view={\"Search For a Card\"} isAuth={this.props.auth}></CardDisplay>\n\n            \n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    const {isLoaded} = state;\n    const {cardList} = state;\n    const {auth} = state;\n    return {isLoaded, cardList, auth}\n\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        getCard: (item)=>{dispatch(getCard(item))},\n        saveMyCard: (item)=>{dispatch(saveMyCard(item))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home)\n\n\n"]},"metadata":{},"sourceType":"module"}