{"ast":null,"code":"var _jsxFileName = \"/home/andrew/mtg/client/src/components/dropDown.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { saveDeck, getDeck } from \"../store/actions\";\nimport Styled from \"../style/styled\";\n\nclass DropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: \"0vh\",\n      deckName: \"\",\n      selectError: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  showDiv() {\n    if (this.state.display == \"0vh\") {\n      this.setState({\n        display: \"15vh\"\n      });\n    } else {\n      this.setState({\n        display: \"0vh\"\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      deckName: e.target.value\n    });\n  }\n\n  handleClick(item) {\n    this.props.getDeck({\n      name: item.name\n    }); //handle click changes the deck\n\n    this.setState({\n      deckName: item.name\n    });\n  } //Handles the saving of decks, displays messages based on no name or not authorized\n\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.deckName === \"\") {\n      this.setState({\n        selectError: \"All Decks Must Have a Name\"\n      });\n    } else if (this.props.auth === false) {\n      this.setState({\n        selectError: \"Login To Save Deck\"\n      });\n    } else if (this.props.currentDeck.decklist.length === 0) {\n      this.setState({\n        selectError: \"Decklist Cannot Be Empty\"\n      });\n    } else {\n      this.setState({\n        selectError: false\n      });\n      this.props.saveDeck(this.state.deckName, this.props.currentDeck);\n    }\n  }\n\n  handleClickOutside(event) {\n    this.setState({\n      selectError: false\n    });\n\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      if (this.state.display === \"15vh\") {\n        this.setState({\n          display: \"0vh\"\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Styled.DeckSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, this.state.selectError && /*#__PURE__*/React.createElement(Styled.SelectError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 44\n      }\n    }, this.state.selectError), /*#__PURE__*/React.createElement(Styled.DropInput, {\n      type: \"text\",\n      value: this.state.deckName,\n      onChange: e => this.handleChange(e),\n      placeholder: this.props.currentDeck.name,\n      onClick: () => this.showDiv(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Styled.DropButton, {\n      type: \"button\",\n      onClick: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \"Save\")), /*#__PURE__*/React.createElement(Styled.DeckSelectDrop, {\n      height: this.state.display,\n      ref: this.setWrapperRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, this.props.myDecks.length > 0 ? this.props.myDecks.map((item, index) => {\n      return /*#__PURE__*/React.createElement(Styled.DeckSelectItem, {\n        height: this.state.display,\n        onClick: () => this.handleClick(item),\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 28\n        }\n      }, item.name);\n    }) : /*#__PURE__*/React.createElement(Styled.DeckSelectItem, {\n      height: this.state.display,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \"No Saved Decks\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    myDecks\n  } = state;\n  const {\n    currentDeck\n  } = state;\n  const {\n    auth\n  } = state;\n  return {\n    myDecks,\n    currentDeck,\n    auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveDeck: (deckName, deck) => {\n      dispatch(saveDeck(deckName, deck));\n    },\n    getDeck: deckName => {\n      dispatch(getDeck(deckName));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDown);","map":{"version":3,"sources":["/home/andrew/mtg/client/src/components/dropDown.jsx"],"names":["React","Component","connect","saveDeck","getDeck","Styled","DropDown","constructor","props","state","display","deckName","selectError","handleChange","bind","handleClick","handleSubmit","setWrapperRef","handleClickOutside","componentDidMount","document","addEventListener","componentWillUnmount","node","wrapperRef","showDiv","setState","e","target","value","item","name","preventDefault","auth","currentDeck","decklist","length","event","contains","render","myDecks","map","index","mapStateToProps","mapDispatchToProps","dispatch","deck"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from \"react-redux\";\nimport {saveDeck, getDeck} from \"../store/actions\"\nimport Styled from \"../style/styled\"\n\nclass DropDown extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            display:\"0vh\",\n            deckName:\"\",\n            selectError:false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n    \n    componentWillUnmount(){\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    setWrapperRef(node){\n        this.wrapperRef = node;\n    }\n\n    showDiv(){\n        \n        if(this.state.display==\"0vh\"){\n            \n            this.setState({display:\"15vh\"})\n        }else{\n            this.setState({display:\"0vh\"})\n        }\n        \n    }\n\n    handleChange(e){\n        this.setState({deckName: e.target.value})\n    }\n\n    handleClick(item){\n        this.props.getDeck({name: item.name})\n        //handle click changes the deck\n        this.setState({deckName: item.name})\n\n    }\n\n    //Handles the saving of decks, displays messages based on no name or not authorized\n    handleSubmit(e){\n        e.preventDefault();\n        if(this.state.deckName===\"\"){\n            this.setState({selectError: \"All Decks Must Have a Name\"})\n        }else if(this.props.auth===false){\n            this.setState({selectError:\"Login To Save Deck\"})\n        }else if(this.props.currentDeck.decklist.length===0){\n            this.setState({selectError:\"Decklist Cannot Be Empty\"})\n        }else{\n            this.setState({selectError:false})\n            this.props.saveDeck(this.state.deckName, this.props.currentDeck)\n        }\n    }\n\n    handleClickOutside(event){\n        this.setState({selectError:false})\n        if(this.wrapperRef && !this.wrapperRef.contains(event.target)){\n            if(this.state.display===\"15vh\"){\n            this.setState({display:\"0vh\"})\n            }\n        }\n    }\n\n    render() {\n        return (\n            <>\n                \n                <Styled.DeckSelect>\n                {this.state.selectError && <Styled.SelectError>{this.state.selectError}</Styled.SelectError>}\n                <Styled.DropInput type=\"text\" value={this.state.deckName} onChange={e=>this.handleChange(e)} placeholder={this.props.currentDeck.name} onClick={()=>this.showDiv()}></Styled.DropInput>\n                <Styled.DropButton type=\"button\" onClick={event=>this.handleSubmit(event)}>Save</Styled.DropButton>\n                \n                </Styled.DeckSelect>\n                \n                \n\n                <Styled.DeckSelectDrop height={this.state.display} ref={this.setWrapperRef}>\n                {this.props.myDecks.length>0 ? this.props.myDecks.map((item, index)=>{\n                    return <Styled.DeckSelectItem height={this.state.display} onClick={()=>this.handleClick(item)} key={index}>{item.name}</Styled.DeckSelectItem>\n                }): <Styled.DeckSelectItem height={this.state.display}>No Saved Decks</Styled.DeckSelectItem>}\n                </Styled.DeckSelectDrop>\n\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) =>{\n    const {myDecks} = state;\n    const {currentDeck} = state;\n    const {auth} = state;\n    return {myDecks, currentDeck, auth}\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        saveDeck: (deckName, deck)=>{dispatch(saveDeck(deckName, deck))},\n        getDeck: (deckName)=>{dispatch(getDeck(deckName))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropDown)"]},"metadata":{},"sourceType":"module"}