{"ast":null,"code":"import _classCallCheck from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _possibleConstructorReturn from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/andrew/mtg/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function _createSuper(Derived){return function(){var Super=_getPrototypeOf(Derived),result;if(_isNativeReflectConstruct()){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import Styled from\"../style/styled\";var ModalDeck=/*#__PURE__*/function(_Component){_inherits(ModalDeck,_Component);var _super=_createSuper(ModalDeck);function ModalDeck(props){var _this;_classCallCheck(this,ModalDeck);_this=_super.call(this,props);_this.state={show:false,cloneName:\"\"};_this.handleClickOutside=_this.handleClickOutside.bind(_assertThisInitialized(_this));_this.setWrapperRef=_this.setWrapperRef.bind(_assertThisInitialized(_this));_this.showModal=_this.showModal.bind(_assertThisInitialized(_this));return _this;}_createClass(ModalDeck,[{key:\"componentDidMount\",value:function componentDidMount(){document.addEventListener(\"mousedown\",this.handleClickOutside);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){document.addEventListener(\"mousedown\",this.handleClickOutside);}},{key:\"handleClickOutside\",value:function handleClickOutside(event){if(this.wrapperRef&&!this.wrapperRef.contains(event.target)){this.setState({show:false});}}},{key:\"showModal\",value:function showModal(){if(this.state.show){this.setState({show:false});}else{this.setState({show:true});}}},{key:\"setWrapperRef\",value:function setWrapperRef(node){this.wrapperRef=node;}},{key:\"handleClick\",value:function handleClick(){this.props.clone(this.state.cloneName,this.props.deck);}},{key:\"handleChange\",value:function handleChange(e){this.setState({cloneName:e.target.value});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Styled.ModalDeckButton,{onClick:this.showModal},\"Clone Deck\"),this.state.show&&/*#__PURE__*/React.createElement(Styled.CloneModal,{ref:this.setWrapperRef},/*#__PURE__*/React.createElement(Styled.CloneModalHeader,null,\"Clone \\\"\",this.props.deck.name,\"\\\"\"),/*#__PURE__*/React.createElement(Styled.AccountInput,{type:\"text\",value:this.state.cloneName,placeholder:\"Cloned Deck Name\",onChange:function onChange(e){return _this2.handleChange(e);}}),/*#__PURE__*/React.createElement(Styled.AccountButton,{onClick:function onClick(){return _this2.handleClick();}},\"Save\")));}}]);return ModalDeck;}(Component);export{ModalDeck as default};","map":{"version":3,"sources":["/home/andrew/mtg/client/src/components/modalDeck.jsx"],"names":["React","Component","Styled","ModalDeck","props","state","show","cloneName","handleClickOutside","bind","setWrapperRef","showModal","document","addEventListener","event","wrapperRef","contains","target","setState","node","clone","deck","e","value","name","handleChange","handleClick"],"mappings":"k9CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,C,GAEqBC,CAAAA,S,sGACjB,mBAAYC,KAAZ,CAAkB,2CACd,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAW,CACPC,IAAI,CAAC,KADE,CAEPC,SAAS,CAAC,EAFH,CAAX,CAIA,MAAKC,kBAAL,CAA0B,MAAKA,kBAAL,CAAwBC,IAAxB,+BAA1B,CACA,MAAKC,aAAL,CAAqB,MAAKA,aAAL,CAAmBD,IAAnB,+BAArB,CACA,MAAKE,SAAL,CAAiB,MAAKA,SAAL,CAAeF,IAAf,+BAAjB,CARc,aAUjB,C,mFAEkB,CACfG,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,CAAuC,KAAKL,kBAA5C,EAEH,C,mEAEqB,CAClBI,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,CAAuC,KAAKL,kBAA5C,EACH,C,8DAEkBM,K,CAAM,CAErB,GAAG,KAAKC,UAAL,EAAmB,CAAC,KAAKA,UAAL,CAAgBC,QAAhB,CAAyBF,KAAK,CAACG,MAA/B,CAAvB,CAA8D,CAC1D,KAAKC,QAAL,CAAc,CAACZ,IAAI,CAAC,KAAN,CAAd,EACH,CACJ,C,6CAEU,CACP,GAAG,KAAKD,KAAL,CAAWC,IAAd,CAAmB,CACf,KAAKY,QAAL,CAAc,CAACZ,IAAI,CAAC,KAAN,CAAd,EACH,CAFD,IAEK,CACD,KAAKY,QAAL,CAAc,CAACZ,IAAI,CAAC,IAAN,CAAd,EACH,CACJ,C,oDAEaa,I,CAAK,CACf,KAAKJ,UAAL,CAAkBI,IAAlB,CACH,C,iDAEY,CACT,KAAKf,KAAL,CAAWgB,KAAX,CAAiB,KAAKf,KAAL,CAAWE,SAA5B,CAAuC,KAAKH,KAAL,CAAWiB,IAAlD,EACH,C,kDAEYC,C,CAAE,CACX,KAAKJ,QAAL,CAAc,CAACX,SAAS,CAACe,CAAC,CAACL,MAAF,CAASM,KAApB,CAAd,EACH,C,uCAGQ,iBAEL,mBAEI,4CACQ,oBAAC,MAAD,CAAQ,eAAR,EAAwB,OAAO,CAAE,KAAKZ,SAAtC,eADR,CAES,KAAKN,KAAL,CAAWC,IAAX,eACG,oBAAC,MAAD,CAAQ,UAAR,EAAmB,GAAG,CAAE,KAAKI,aAA7B,eACI,oBAAC,MAAD,CAAQ,gBAAR,iBAAiC,KAAKN,KAAL,CAAWiB,IAAX,CAAgBG,IAAjD,MADJ,cAEI,oBAAC,MAAD,CAAQ,YAAR,EAAqB,IAAI,CAAC,MAA1B,CAAiC,KAAK,CAAE,KAAKnB,KAAL,CAAWE,SAAnD,CAA8D,WAAW,CAAC,kBAA1E,CAA6F,QAAQ,CAAE,kBAACe,CAAD,QAAK,CAAA,MAAI,CAACG,YAAL,CAAkBH,CAAlB,CAAL,EAAvG,EAFJ,cAGI,oBAAC,MAAD,CAAQ,aAAR,EAAsB,OAAO,CAAE,yBAAI,CAAA,MAAI,CAACI,WAAL,EAAJ,EAA/B,SAHJ,CAHZ,CAFJ,CAcH,C,uBAlEkCzB,S,SAAlBE,S","sourcesContent":["import React, { Component } from 'react'\nimport Styled from \"../style/styled\"\n\nexport default class ModalDeck extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            show:false,\n            cloneName:\"\"\n        }\n        this.handleClickOutside = this.handleClickOutside.bind(this)\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.showModal = this.showModal.bind(this);\n        \n    }\n\n    componentDidMount(){\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n        \n    }\n    \n    componentWillUnmount(){\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    handleClickOutside(event){\n        \n        if(this.wrapperRef && !this.wrapperRef.contains(event.target)){\n            this.setState({show:false})\n        }\n    }\n\n    showModal(){\n        if(this.state.show){\n            this.setState({show:false})\n        }else{\n            this.setState({show:true})\n        }\n    }\n\n    setWrapperRef(node){\n        this.wrapperRef = node;\n    }\n\n    handleClick(){\n        this.props.clone(this.state.cloneName, this.props.deck)\n    }\n\n    handleChange(e){\n        this.setState({cloneName:e.target.value})\n    }\n\n\n    render() {\n        \n        return (\n            \n            <div>\n                    <Styled.ModalDeckButton onClick={this.showModal}>Clone Deck</Styled.ModalDeckButton>\n                    {this.state.show && \n                        <Styled.CloneModal ref={this.setWrapperRef}> \n                            <Styled.CloneModalHeader>Clone \"{this.props.deck.name}\"</Styled.CloneModalHeader>\n                            <Styled.AccountInput type=\"text\" value={this.state.cloneName} placeholder=\"Cloned Deck Name\" onChange={(e)=>this.handleChange(e)}></Styled.AccountInput>\n                            <Styled.AccountButton onClick={()=>this.handleClick()}>Save</Styled.AccountButton>\n                        </Styled.CloneModal>\n                    }\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}