{"ast":null,"code":"var _jsxFileName = \"/home/andrew/mtg/client/src/pages/home.jsx\";\nimport { getCard, saveMyCard } from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from 'react';\nimport Loader from \"react-loader\";\nimport { Decklist, CardDisplay, CheckBox } from \"../components\";\nimport Styled from \"../style/styled\";\n\nclass home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.getCard(this.state);\n    };\n\n    this.addMyCard = (card, e) => {\n      //hides button of AddCard To Library if clicked.\n      e.target.style.visibility = \"hidden\";\n      const filteredItem = {\n        imageUrl: card.imageUrl,\n        name: card.name,\n        cmc: card.cmc,\n        types: card.types,\n        type: card.type,\n        text: card.text,\n        loyalty: card.loyalty,\n        toughness: card.toughness,\n        power: card.power,\n        quantity: 1\n      };\n      this.props.saveMyCard(filteredItem);\n    };\n\n    this.state = {\n      name: \"\",\n      cmc: \"\",\n      set: \"\",\n      colors: [],\n      type: \"\",\n      text: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\n  }\n\n  handleChange(event) {\n    let newState = {};\n    newState[event.target.name] = event.target.value;\n    this.setState(newState);\n  }\n\n  handleChangeSelect(color) {\n    console.log(this.state.colors);\n\n    if (this.state.colors.includes(color)) {\n      let index = this.state.colors.indexOf(color);\n      let newState = this.state.colors;\n      newState.splice(index, 1);\n      this.setState({\n        colors: newState\n      });\n    } else {\n      this.setState({\n        colors: [...this.state.colors, color]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Styled.SearchForm, {\n      name: \"search-form\",\n      onSubmit: e => this.handleSubmit(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Styled.SearchFormLabel, {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Styled.SearchFormInput, {\n      name: \"name\",\n      type: \"text\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Styled.SearchFormLabel, {\n      htmlFor: \"cmc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"CMC\"), /*#__PURE__*/React.createElement(Styled.SearchFormInput, {\n      name: \"cmc\",\n      type: \"text\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Styled.SearchFormLabel, {\n      htmlFor: \"set\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"Set\"), /*#__PURE__*/React.createElement(Styled.SearchFormInput, {\n      name: \"set\",\n      type: \"text\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Styled.SearchFormInputCheckboxDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CheckBox, {\n      color: \"red\",\n      select: this.handleChangeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CheckBox, {\n      color: \"blue\",\n      select: this.handleChangeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CheckBox, {\n      color: \"green\",\n      select: this.handleChangeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CheckBox, {\n      color: \"black\",\n      select: this.handleChangeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CheckBox, {\n      color: \"white\",\n      select: this.handleChangeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Styled.SearchFormLabel, {\n      htmlFor: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(Styled.SearchFormInput, {\n      name: \"type\",\n      type: \"text\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Styled.SearchFormLabel, {\n      htmlFor: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Text\"), /*#__PURE__*/React.createElement(Styled.SearchFormInput, {\n      name: \"text\",\n      type: \"text\",\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Styled.SearchFormButton, {\n      value: \"submit\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Get the card\")), /*#__PURE__*/React.createElement(Loader, {\n      loaded: this.props.isLoaded,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CardDisplay, {\n      cardList: this.props.cardList,\n      addMyCard: this.addMyCard,\n      view: \"Search For a Card\",\n      isAuth: this.props.auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    isLoaded\n  } = state;\n  const {\n    cardList\n  } = state;\n  const {\n    auth\n  } = state;\n  return {\n    isLoaded,\n    cardList,\n    auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCard: item => {\n      dispatch(getCard(item));\n    },\n    saveMyCard: item => {\n      dispatch(saveMyCard(item));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home);","map":{"version":3,"sources":["/home/andrew/mtg/client/src/pages/home.jsx"],"names":["getCard","saveMyCard","connect","React","Component","Loader","Decklist","CardDisplay","CheckBox","Styled","home","constructor","props","handleSubmit","e","preventDefault","state","addMyCard","card","target","style","visibility","filteredItem","imageUrl","name","cmc","types","type","text","loyalty","toughness","power","quantity","set","colors","handleChange","bind","handleChangeSelect","event","newState","value","setState","color","console","log","includes","index","indexOf","splice","render","isLoaded","cardList","auth","mapStateToProps","mapDispatchToProps","dispatch","item"],"mappings":"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","sourcesContent":["\n\nimport {getCard, saveMyCard} from \"../store/actions\";\nimport {connect} from \"react-redux\";\nimport React, { Component } from 'react'\nimport Loader from \"react-loader\";\nimport {Decklist, CardDisplay, CheckBox} from \"../components\";\nimport Styled from \"../style/styled\";\n\n\n\nclass home extends Component {\n    constructor(props){\n        super(props);\n        this.state = {name:\"\", cmc:\"\", set:\"\", colors:[], type:\"\", text:\"\"};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChangeSelect = this.handleChangeSelect.bind(this)\n    }\n\n    handleChange(event){\n        let newState = {};\n        newState[event.target.name]=event.target.value;\n        this.setState(newState);\n        \n    }\n    handleChangeSelect(color){\n        \n        \n        console.log(this.state.colors)\n        if(this.state.colors.includes(color)){\n            let index = this.state.colors.indexOf(color)\n            let newState = this.state.colors;\n            newState.splice(index,1);\n            this.setState({colors: newState})\n        }else{\n            this.setState({colors:[...this.state.colors, color]})\n            \n        }\n        \n        \n    }\n\n    handleSubmit= (e) =>{\n        e.preventDefault();\n        \n        this.props.getCard(this.state)\n    }\n\n    addMyCard = (card, e) =>{\n        //hides button of AddCard To Library if clicked.\n        e.target.style.visibility = \"hidden\"\n\n        const filteredItem = {\n            imageUrl: card.imageUrl,\n            name: card.name,\n            cmc: card.cmc,\n            types: card.types,\n            type:card.type,\n            text:card.text,\n            loyalty:card.loyalty,\n            toughness:card.toughness,\n            power:card.power,\n            quantity:1\n        }\n        this.props.saveMyCard(filteredItem)\n    }\n    \n    \n    render() {\n        \n        return (\n        <div>\n            <Styled.SearchForm name=\"search-form\"  onSubmit={e=>this.handleSubmit(e)}>\n                <Styled.SearchFormLabel htmlFor=\"name\">Name</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"name\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormLabel htmlFor=\"cmc\" >CMC</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"cmc\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormLabel htmlFor=\"set\">Set</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"set\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                \n                <Styled.SearchFormInputCheckboxDiv>\n                <CheckBox color={\"red\"} select={this.handleChangeSelect}></CheckBox>                \n                <CheckBox color={\"blue\"} select={this.handleChangeSelect}></CheckBox>\n                <CheckBox color={\"green\"} select={this.handleChangeSelect}></CheckBox>\n                <CheckBox color={\"black\"} select={this.handleChangeSelect}></CheckBox>\n                <CheckBox color={\"white\"} select={this.handleChangeSelect}></CheckBox>\n                </Styled.SearchFormInputCheckboxDiv>\n                \n                <Styled.SearchFormLabel htmlFor=\"type\">Type</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"type\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormLabel htmlFor=\"text\">Text</Styled.SearchFormLabel>\n                <Styled.SearchFormInput name=\"text\" type=\"text\" onChange={e=>this.handleChange(e)}></Styled.SearchFormInput>\n                <Styled.SearchFormButton value=\"submit\" type=\"submit\">Get the card</Styled.SearchFormButton>\n            </Styled.SearchForm>\n\n            <Loader loaded={this.props.isLoaded}/>\n            {/* Look at props cardlist being passed down, if empty show alternate text \n                if not empty print only cards that have an image and are the original printing of the card\n            */}\n            <CardDisplay cardList={this.props.cardList} addMyCard={this.addMyCard} view={\"Search For a Card\"} isAuth={this.props.auth}></CardDisplay>\n\n            \n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    const {isLoaded} = state;\n    const {cardList} = state;\n    const {auth} = state;\n    return {isLoaded, cardList, auth}\n\n}\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        getCard: (item)=>{dispatch(getCard(item))},\n        saveMyCard: (item)=>{dispatch(saveMyCard(item))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(home)\n\n\n"]},"metadata":{},"sourceType":"module"}