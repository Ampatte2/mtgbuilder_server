{"ast":null,"code":"var _jsxFileName = \"/home/andrew/mtg/client/src/pages/viewDeck.jsx\";\nimport React, { Component } from 'react';\nimport { CardDisplay } from \"../components\";\nimport { connect } from \"react-redux\";\nimport { ModalDeck } from \"../components/index\";\nimport { saveDeck } from \"../store/actions/index\";\nimport { Redirect } from 'react-router-dom';\nimport Styled from \"../style/styled\";\n\nclass viewDeck extends Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(name, deck) {\n    this.props.saveDeck(name, deck);\n  }\n\n  render() {\n    const id = this.props.match.params.id;\n    const view = this.props.match.params.view;\n    console.log(this.props[view][id]);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props[view][id] ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Styled.AccountHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, this.props[view][id].name), this.props.auth && /*#__PURE__*/React.createElement(ModalDeck, {\n      deck: this.props[view][id],\n      isAuth: this.props.auth,\n      clone: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardDisplay, {\n      cardList: this.props[view][id].decklist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    myDecks\n  } = state;\n  const {\n    decklists\n  } = state;\n  const {\n    auth\n  } = state;\n  return {\n    myDecks,\n    decklists,\n    auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  saveDeck\n})(viewDeck);","map":{"version":3,"sources":["/home/andrew/mtg/client/src/pages/viewDeck.jsx"],"names":["React","Component","CardDisplay","connect","ModalDeck","saveDeck","Redirect","Styled","viewDeck","constructor","props","handleClick","bind","name","deck","render","id","match","params","view","console","log","auth","decklist","mapStateToProps","state","myDecks","decklists"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,eAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAGA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAGDD,EAAAA,WAAW,CAACE,IAAD,EAAOC,IAAP,EAAY;AACnB,SAAKJ,KAAL,CAAWL,QAAX,CAAoBQ,IAApB,EAA0BC,IAA1B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,EAAE,GAAG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBF,EAAnC;AACA,UAAMG,IAAI,GAAG,KAAKT,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,IAArC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWS,IAAX,EAAiBH,EAAjB,CAAZ;AACA,wBACI,0CACK,KAAKN,KAAL,CAAWS,IAAX,EAAiBH,EAAjB,iBACD,uDAEA,oBAAC,MAAD,CAAQ,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuB,KAAKN,KAAL,CAAWS,IAAX,EAAiBH,EAAjB,EAAqBH,IAA5C,CAFA,EAGC,KAAKH,KAAL,CAAWY,IAAX,iBACD,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWS,IAAX,EAAiBH,EAAjB,CAAjB;AAAuC,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWY,IAA1D;AAAgE,MAAA,KAAK,EAAE,KAAKX,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,eAMA,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWS,IAAX,EAAiBH,EAAjB,EAAqBO,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADC,gBASC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVN,CADJ;AAeH;;AA/B4B;;AAkCjC,MAAMC,eAAe,GAAGC,KAAK,IAAG;AAC5B,QAAM;AAACC,IAAAA;AAAD,MAAYD,KAAlB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAcF,KAApB;AACA,QAAM;AAACH,IAAAA;AAAD,MAASG,KAAf;AACA,SAAO;AAACC,IAAAA,OAAD;AAAUC,IAAAA,SAAV;AAAqBL,IAAAA;AAArB,GAAP;AACH,CALD;;AAOA,eAAenB,OAAO,CAACqB,eAAD,EAAkB;AAACnB,EAAAA;AAAD,CAAlB,CAAP,CAAqCG,QAArC,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {CardDisplay} from \"../components\";\nimport {connect} from \"react-redux\";\nimport {ModalDeck} from \"../components/index\";\nimport {saveDeck} from \"../store/actions/index\";\nimport { Redirect } from 'react-router-dom';\nimport Styled from \"../style/styled\";\n\n\nclass viewDeck extends Component {\n    constructor(props){\n        super(props)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n\n    handleClick(name, deck){\n        this.props.saveDeck(name, deck)\n    }\n\n    render() {\n\n        const id = this.props.match.params.id\n        const view = this.props.match.params.view\n        console.log(this.props[view][id])\n        return (\n            <>\n                {this.props[view][id] ? \n                <>\n                \n                <Styled.AccountHeader>{this.props[view][id].name}</Styled.AccountHeader>\n                {this.props.auth &&\n                <ModalDeck deck={this.props[view][id]} isAuth={this.props.auth} clone={this.handleClick}></ModalDeck>\n                }\n                <CardDisplay cardList={this.props[view][id].decklist}></CardDisplay>\n                </>\n                : <Redirect to=\"/\"/>}\n                \n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state =>{\n    const {myDecks} = state;\n    const {decklists} = state;\n    const {auth} = state;\n    return {myDecks, decklists, auth}\n}\n\nexport default connect(mapStateToProps, {saveDeck})(viewDeck)\n"]},"metadata":{},"sourceType":"module"}