{"ast":null,"code":"import React from'react';import{Modal}from\"./index\";import Styled from\"../style/styled\";export default function CardDisplay(props){var dis=props.cardList;return/*#__PURE__*/React.createElement(Styled.CardDisplay,null,Object.keys(dis).length>0?Object.values(dis).map(function(item,index){var typeDescription,addButton,deleteButton;if(props.isAuth){addButton=/*#__PURE__*/React.createElement(Styled.CardButton,{onClick:function onClick(e){return props.addMyCard(item,e);}},\"Add Card To Library\");}if(props.deleteCard){deleteButton=/*#__PURE__*/React.createElement(Styled.CardButton,{onClick:function onClick(){return props.deleteCard(item);}},\"Delete Card From Library\");}if(item[\"name\"]===\"No Cards Found\"){return/*#__PURE__*/React.createElement(Styled.Card,null,/*#__PURE__*/React.createElement(Styled.CardHeader,{key:index},item[\"name\"]));}else if(item.imageUrl){if(item[\"types\"][0]===\"Creature\"){typeDescription=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"Power \",item[\"power\"]),/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"Toughness \",item[\"toughness\"]));}else if(item[\"types\"][0]===\"Planeswalker\"){typeDescription=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"Loyalty \",item[\"loyalty\"]));}return/*#__PURE__*/React.createElement(Styled.Card,null,/*#__PURE__*/React.createElement(Styled.CardHeader,{key:index},item[\"name\"]),/*#__PURE__*/React.createElement(Styled.CardInfo,null,/*#__PURE__*/React.createElement(Modal,{item:item}),/*#__PURE__*/React.createElement(Styled.CardInfoText,null,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"CMC \",item[\"cmc\"]),typeDescription,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,item[\"type\"]))),/*#__PURE__*/React.createElement(Styled.CardDescription,null,item[\"text\"]),addButton,deleteButton);}else{if(item[\"types\"][0]===\"Creature\"){typeDescription=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"Power \",item[\"power\"]),/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"Toughness \",item[\"toughness\"]));}else if(item[\"types\"][0]===\"Planeswalker\"){typeDescription=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"Loyalty \",item[\"loyalty\"]));}return/*#__PURE__*/React.createElement(Styled.Card,null,/*#__PURE__*/React.createElement(Styled.CardHeader,{key:index},item[\"name\"]),/*#__PURE__*/React.createElement(Styled.CardInfo,null,/*#__PURE__*/React.createElement(Modal,{item:item}),/*#__PURE__*/React.createElement(Styled.CardInfoText,null,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,\"CMC \",item[\"cmc\"]),typeDescription,/*#__PURE__*/React.createElement(Styled.CardHeader2,null,item[\"type\"]))),/*#__PURE__*/React.createElement(Styled.CardDescription,null,item[\"text\"]),addButton,deleteButton);}}):/*#__PURE__*/React.createElement(Styled.CardEmpty,null,props.view));}","map":{"version":3,"sources":["/home/andrew/mtg/client/src/components/cardDisplay.jsx"],"names":["React","Modal","Styled","CardDisplay","props","dis","cardList","Object","keys","length","values","map","item","index","typeDescription","addButton","deleteButton","isAuth","e","addMyCard","deleteCard","imageUrl","view"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Modal} from \"./index\"\nimport Styled from \"../style/styled\"\n\n\nexport default function CardDisplay(props) {\n    \n    const dis = props.cardList\n    \n    return (\n        <Styled.CardDisplay>\n            {Object.keys(dis).length> 0 ? Object.values(dis).map((item, index)=>{\n                        let typeDescription, addButton, deleteButton;\n\n                        if(props.isAuth){\n                            addButton = <Styled.CardButton onClick={(e)=>props.addMyCard(item,e)}>Add Card To Library</Styled.CardButton>\n                        }\n\n                        if(props.deleteCard){\n                            deleteButton = <Styled.CardButton onClick={()=>props.deleteCard(item)}>Delete Card From Library</Styled.CardButton>\n                        }\n\n                        if(item[\"name\"]===\"No Cards Found\"){\n                            return <Styled.Card>\n                                        <Styled.CardHeader key={index}>{item[\"name\"]}</Styled.CardHeader>\n                                        \n                                    </Styled.Card>\n                        }\n                        else if(item.imageUrl){\n\n                            if(item[\"types\"][0]===\"Creature\"){\n\n                                typeDescription = <><Styled.CardHeader2>Power {item[\"power\"]}</Styled.CardHeader2><Styled.CardHeader2>Toughness {item[\"toughness\"]}</Styled.CardHeader2></>\n                                \n                            }else if (item[\"types\"][0]===\"Planeswalker\"){\n\n                                typeDescription = <><Styled.CardHeader2>Loyalty {item[\"loyalty\"]}</Styled.CardHeader2></>\n\n                            }\n\n                            return <Styled.Card>\n                                    <Styled.CardHeader key={index}>{item[\"name\"]}</Styled.CardHeader>\n                                    <Styled.CardInfo>\n                                    <Modal item={item}/>\n                                    <Styled.CardInfoText>\n                                    <Styled.CardHeader2>CMC {item[\"cmc\"]}</Styled.CardHeader2>\n                                    {typeDescription}\n                                    <Styled.CardHeader2>{item[\"type\"]}</Styled.CardHeader2>\n                                    </Styled.CardInfoText>\n                                    </Styled.CardInfo>\n                                    <Styled.CardDescription>{item[\"text\"]}</Styled.CardDescription>\n                                    {addButton}\n                                    {deleteButton}\n                                    </Styled.Card>\n                        }else{\n\n                            if(item[\"types\"][0]===\"Creature\"){\n\n                                typeDescription = <><Styled.CardHeader2>Power {item[\"power\"]}</Styled.CardHeader2><Styled.CardHeader2>Toughness {item[\"toughness\"]}</Styled.CardHeader2></>\n\n                            }else if (item[\"types\"][0]===\"Planeswalker\"){\n\n                                typeDescription = <><Styled.CardHeader2>Loyalty {item[\"loyalty\"]}</Styled.CardHeader2></>\n\n                            }\n                            return <Styled.Card>\n\n                            <Styled.CardHeader key={index}>{item[\"name\"]}</Styled.CardHeader>\n                            <Styled.CardInfo>\n                            <Modal item={item}/>\n                            <Styled.CardInfoText>\n                            <Styled.CardHeader2>CMC {item[\"cmc\"]}</Styled.CardHeader2>\n                            {typeDescription}\n                            <Styled.CardHeader2>{item[\"type\"]}</Styled.CardHeader2>\n                            </Styled.CardInfoText>\n                            </Styled.CardInfo>\n                            <Styled.CardDescription>{item[\"text\"]}</Styled.CardDescription>\n                            {addButton}\n                            {deleteButton}\n                            </Styled.Card>\n                        }\n                    }\n        \n            ): <Styled.CardEmpty>{props.view}</Styled.CardEmpty>}\n        </Styled.CardDisplay>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}