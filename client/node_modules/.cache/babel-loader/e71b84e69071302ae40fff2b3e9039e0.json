{"ast":null,"code":"import{fetchCard,getLogin,getDeckList,saveToList,getDefault,getRegister,getUser,saveCard,deleteCard}from\"../../api\";import Erasure from\"../../images/Erasure.jpg\";import{getDefaultFlags}from\"mysql2/lib/connection_config\";export var GET_CARD=\"GET_CARD\";export var DISPLAY_CARD=\"DISPLAY_CARD\";export var IS_LOADED=\"IS_LOADED\";export var LOGIN=\"LOGIN\";export var GET_DECK=\"GET_DECK\";export var ADD_CARD=\"ADD_CARD\";export var MODIFY_DECK=\"MODIFY_DECK\";export var MY_CARD=\"MY_CARD\";export var REGISTER=\"REGISTER\";export var ERROR=\"ERROR\";export var AUTH=\"AUTH\";export var ADD_DECK=\"ADD_DECK\";export var DB_DECK=\"DB_DECK\";export var LOAD_DECK=\"LOAD_DECK\";export var LOGOUT=\"LOGOUT\";export var DB_CARD=\"DB_CARD\";export function addCard(card){return{type:ADD_CARD,card:card};}export function modifyDeck(modifier,index){return{type:MODIFY_DECK,modifier:modifier,index:index};}export function displayCard(cardList){return{type:DISPLAY_CARD,cardList:cardList};}export function isLoaded(value){return{type:IS_LOADED,value:value};}export function isError(value){return{type:ERROR,value:value};}export function isAuth(value){return{type:AUTH,value:value};}export function logout(){return{type:LOGOUT};}export function myCard(card){return{type:MY_CARD,card:card};}export function addDeck(deck){return{type:ADD_DECK,deck:deck};}export function dbDecks(decks){return{type:DB_DECK,decks:decks};}export function dbCard(cards){return{type:DB_CARD,cards:cards};}export function loadDeck(deck){return{type:LOAD_DECK,deck:deck};}export function saveMyCard(card){var payload={card:card,token:localStorage.getItem(\"token\")};return function(dispatch){dispatch(isLoaded(false));return saveCard(payload).then(function(res){//only adds if card is not duplicate\nif(res.data.error){dispatch(myCard(card));}dispatch(isLoaded(true));});};}export function deleteMyCard(card){var payload={card:card,token:localStorage.getItem(\"token\")};return function(dispatch){dispatch(isLoaded(false));return deleteCard(payload).then(function(res){dispatch(user(payload.token));dispatch(isLoaded(true));});};}export function login(value){return function(dispatch){dispatch(isLoaded(false));return getLogin(value).then(function(res){if(res.data.token){localStorage.setItem(\"token\",res.data.token);dispatch(isError(false));dispatch(user(res.data.token));}else{dispatch(isError(\"Invalid Username Or Password\"));}dispatch(isLoaded(true));});};}export function user(token){return function(dispatch){dispatch(isLoaded(false));return getUser(token).then(function(res){var decks=[];var allDecks=[];var myCards=[];res.data[0].map(function(item){decks.push(JSON.parse(item.decklist));});res.data[1].map(function(item){myCards.push(JSON.parse(item.card));});res.data[2].map(function(item){allDecks.push(JSON.parse(item.decklist));});dispatch(dbDecks(allDecks));dispatch(addDeck(decks));dispatch(dbCard(myCards));dispatch(isAuth(true));dispatch(isLoaded(true));});};}export function getData(){return function(dispatch){dispatch(isLoaded(false));return getDefault().then(function(res){var allDecks=[];res.data.map(function(item){allDecks.push(JSON.parse(item.decklist));});dispatch(dbDecks(allDecks));dispatch(isLoaded(true));});};}export function register(value){return function(dispatch){dispatch(isLoaded(false));return getRegister(value).then(function(res){var token=res.data.token;if(res.data.error){dispatch(isError(\"User Already Exists\"));}else{localStorage.setItem(\"token\",res.data.token);dispatch(isError(false));dispatch(user(token));}dispatch(isLoaded(true));});};}export function add(card){return function(dispatch){return;//api call here\n};}export function saveDeck(deckName,deck){var payload={newDeck:{name:deckName,decklist:deck.decklist},token:localStorage.getItem(\"token\"),id:deck.id};return function(dispatch){dispatch(isLoaded(false));var token=localStorage.getItem(\"token\");return saveToList(payload).then(function(res){if(res.data.error){alert(\"Duplicate Deckname\");}else{dispatch(user(token));alert(\"Decklist Saved\");}dispatch(isLoaded(true));});};}export function getDeck(deck){return function(dispatch){dispatch(isLoaded(false));return getDeckList({deck:deck}).then(function(res){dispatch(loadDeck(res.data.result));dispatch(isLoaded(true));});};}export function getCard(query){return function(dispatch){dispatch(isLoaded(false));return fetchCard(query).then(function(res){//filter the data by assigning it's name to a key in an object and the response object as value of the key\nvar filtered={};if(res.data.cards.length===0){filtered=[{name:\"No Cards Found\",imageUrl:Erasure}];}else{res.data.cards.forEach(function(card){//Look in the filtered object for the card name key, if undefined save as the card with matching key\nif(filtered[card.name]===undefined){filtered[card.name]=card;//if card has no image and the current card from the response has an image save the current card.\n}else if(filtered[card.name][\"imageUrl\"]===undefined&&card.imageUrl){filtered[card.name]=card;}});}dispatch(displayCard(filtered));dispatch(isLoaded(true));});};}","map":{"version":3,"sources":["/home/andrew/mtg/client/src/store/actions/index.js"],"names":["fetchCard","getLogin","getDeckList","saveToList","getDefault","getRegister","getUser","saveCard","deleteCard","Erasure","getDefaultFlags","GET_CARD","DISPLAY_CARD","IS_LOADED","LOGIN","GET_DECK","ADD_CARD","MODIFY_DECK","MY_CARD","REGISTER","ERROR","AUTH","ADD_DECK","DB_DECK","LOAD_DECK","LOGOUT","DB_CARD","addCard","card","type","modifyDeck","modifier","index","displayCard","cardList","isLoaded","value","isError","isAuth","logout","myCard","addDeck","deck","dbDecks","decks","dbCard","cards","loadDeck","saveMyCard","payload","token","localStorage","getItem","dispatch","then","res","data","error","deleteMyCard","user","login","setItem","allDecks","myCards","map","item","push","JSON","parse","decklist","getData","register","add","saveDeck","deckName","newDeck","name","id","alert","getDeck","result","getCard","query","filtered","length","imageUrl","forEach","undefined"],"mappings":"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","sourcesContent":["import {fetchCard, getLogin, getDeckList, saveToList, getDefault, getRegister, getUser, saveCard, deleteCard} from \"../../api\"\nimport Erasure from \"../../images/Erasure.jpg\"\nimport { getDefaultFlags } from \"mysql2/lib/connection_config\"\n\nexport const GET_CARD = \"GET_CARD\"\nexport const DISPLAY_CARD = \"DISPLAY_CARD\"\nexport const IS_LOADED = \"IS_LOADED\"\nexport const LOGIN = \"LOGIN\"\nexport const GET_DECK = \"GET_DECK\"\nexport const ADD_CARD = \"ADD_CARD\"\nexport const MODIFY_DECK = \"MODIFY_DECK\"\nexport const MY_CARD = \"MY_CARD\"\nexport const REGISTER = \"REGISTER\"\nexport const ERROR = \"ERROR\"\nexport const AUTH = \"AUTH\"\nexport const ADD_DECK = \"ADD_DECK\"\nexport const DB_DECK = \"DB_DECK\"\nexport const LOAD_DECK = \"LOAD_DECK\"\nexport const LOGOUT = \"LOGOUT\"\nexport const DB_CARD =\"DB_CARD\"\n\n\nexport function addCard(card){\n    return {type: ADD_CARD, card}\n}\n\nexport function modifyDeck(modifier, index){\n    return {type: MODIFY_DECK, modifier, index}\n}\n\nexport function displayCard(cardList){\n    return {type: DISPLAY_CARD, cardList}\n}\n\nexport function isLoaded(value){\n    return {type:IS_LOADED, value}\n}\n\nexport function isError(value){\n    return {type:ERROR, value}\n}\nexport function isAuth(value){\n    return {type:AUTH, value}\n}\n\nexport function logout(){\n    return {type:LOGOUT}\n}\n\nexport function myCard(card){\n    return {type:MY_CARD, card}\n}\n\nexport function addDeck(deck){\n    return {type:ADD_DECK, deck}\n}\nexport function dbDecks(decks){\n    return {type:DB_DECK, decks}\n}\nexport function dbCard(cards){\n    return {type:DB_CARD, cards};\n}\n\nexport function loadDeck(deck){\n    return {type:LOAD_DECK, deck}\n}\n\nexport function saveMyCard(card){\n    const payload = {card: card, token:localStorage.getItem(\"token\")};\n\n    return function(dispatch){\n        dispatch(isLoaded(false));\n        return saveCard(payload).then(res=>{\n\n            //only adds if card is not duplicate\n            if(res.data.error){\n                dispatch(myCard(card))\n            }\n            \n            dispatch(isLoaded(true))\n        })\n    }\n}\n\nexport function deleteMyCard(card){\n    const payload = {card: card, token:localStorage.getItem(\"token\")}\n    return function(dispatch){\n        dispatch(isLoaded(false));\n        return deleteCard(payload).then(res=>{\n            \n            dispatch(user(payload.token))\n            dispatch(isLoaded(true))\n        })\n    }\n}\n\nexport function login(value){\n    return function(dispatch){\n        dispatch(isLoaded(false))\n        return getLogin(value).then(res=>{\n            if(res.data.token){\n                localStorage.setItem(\"token\",res.data.token)\n                dispatch(isError(false))\n                dispatch(user(res.data.token))\n            }else{\n                dispatch(isError(\"Invalid Username Or Password\"))\n            }\n            dispatch(isLoaded(true))\n        })\n        \n    }\n}\n\nexport function user(token){\n    return function(dispatch){\n        dispatch(isLoaded(false))\n        return getUser(token).then(res=>{\n            \n            \n            let decks=[];\n            let allDecks=[];\n            let myCards=[]\n\n            res.data[0].map(item=>{\n                decks.push(JSON.parse(item.decklist))\n            })\n\n            res.data[1].map(item=>{\n                \n                myCards.push(JSON.parse(item.card))\n            })\n\n            res.data[2].map(item=>{\n                allDecks.push(JSON.parse(item.decklist))\n            })\n\n            dispatch(dbDecks(allDecks))\n            dispatch(addDeck(decks))\n            dispatch(dbCard(myCards))\n            dispatch(isAuth(true))\n            dispatch(isLoaded(true))\n\n        })\n    }\n}\n\nexport function getData(){\n    return function(dispatch){\n        dispatch(isLoaded(false))\n        return getDefault().then((res)=>{\n\n            let allDecks=[];\n            \n            res.data.map(item=>{\n                allDecks.push((JSON.parse(item.decklist)))\n            })\n            \n            dispatch(dbDecks(allDecks))\n            dispatch(isLoaded(true))\n        })\n    }\n}\n\nexport function register(value){\n    return function(dispatch){\n        \n        dispatch(isLoaded(false))\n\n        return getRegister(value).then(res=>{\n\n            const token = res.data.token\n            if(res.data.error){\n                dispatch(isError(\"User Already Exists\"))\n            }else{\n                localStorage.setItem(\"token\",res.data.token)\n                dispatch(isError(false))\n                dispatch(user(token))\n            }\n            \n            dispatch(isLoaded(true))\n        }) \n        \n    }\n}\n\nexport function add(card){\n    return function(dispatch){\n        \n        return //api call here\n    }\n}\n\nexport function saveDeck(deckName, deck){\n    \n    const payload = {newDeck: {name:deckName, decklist: deck.decklist}, token:localStorage.getItem(\"token\"), id: deck.id}\n    \n    return function(dispatch){\n\n        dispatch(isLoaded(false))\n        const token = localStorage.getItem(\"token\")\n        return saveToList(payload).then((res)=>{\n            \n            if(res.data.error){\n                alert(\"Duplicate Deckname\")\n            }else{\n                dispatch(user(token))\n                alert(\"Decklist Saved\")\n            }\n            \n            dispatch(isLoaded(true))\n\n        })\n        \n    }\n    \n}\n\nexport function getDeck (deck){\n    return function(dispatch){\n        dispatch(isLoaded(false))\n        return getDeckList({deck}).then((res)=>{\n            \n            dispatch(loadDeck(res.data.result))\n            \n            dispatch(isLoaded(true))\n        })\n        \n    }\n}\n\nexport function getCard (query){\n\n    return function(dispatch){\n\n        dispatch(isLoaded(false))\n\n        return fetchCard(query).then((res)=>{\n            \n            //filter the data by assigning it's name to a key in an object and the response object as value of the key\n            let filtered={};\n            \n            if(res.data.cards.length===0){\n                filtered = [{name:\"No Cards Found\", imageUrl:Erasure}];\n            }else{\n                res.data.cards.forEach((card)=>{\n                    //Look in the filtered object for the card name key, if undefined save as the card with matching key\n                    if(filtered[card.name]===undefined){\n                        filtered[card.name] = card;\n                    //if card has no image and the current card from the response has an image save the current card.\n                    }else if(filtered[card.name][\"imageUrl\"]===undefined && card.imageUrl){\n                        filtered[card.name] = card;\n                    }\n                });\n            }\n            \n\n\n            dispatch(displayCard(filtered))\n\n            dispatch(isLoaded(true))\n\n        })\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}